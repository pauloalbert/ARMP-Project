import threading
from time import sleep, time
import numpy as np
from numpy import pi

from urx import Robot


class BaseRobot:
    ip: int
    home = [0, -pi / 2, 0, -pi / 2, 0, 0]

    def __init__(self):
        self.robot = None
        while self.robot is None:
            try:
                self.robot = Robot(self.ip, use_rt=True)
            except:
                print('Cannot connect to robot. Retrying...')
                sleep(5)

    def move(self, config, end_early = False, velocity = 0.5):
        dist = lambda a, b: np.linalg.norm(np.array(a) - np.array(b))
        # print('Moving to:', config)
        try:
            # print(f'moving to {config}')
            self.robot.movej(config, acc=10, vel=velocity)
        except:
            pass

        while dist(self.get_config(), config) > 0.1 and not end_early:
            pass

    def move_all(self, config_list):
        # movexs(self, command, pose_list, acc=0.01, vel=0.01, radius=0.01, wait=True, threshold=None):
        self.robot.movexs('movej', config_list, acc=50, vel=0.5, radius=0.1)

    def move_home(self):
        self.move(self.home)

    def get_config(self):
        return self.robot.getj()

    def execute_path(self, path, timing_profile=None):
        """
        Executes the path
        :param path: List of configs
        :param timing_profile: Transition times between each pair of configs - format: real times!
        """

        start_time = time()
        for i, config in enumerate(path):
            self.move(config)
            time_to_sleep = 1
            if timing_profile is not None and time() - start_time < timing_profile[i]:
                time_to_sleep = max(time_to_sleep, timing_profile[i] - (time() - start_time))

            sleep(time_to_sleep)


class TaskRobot(BaseRobot):
    ip = '192.168.0.12'
    task_time = 54.968

    def __init__(self):
        super().__init__()

        self._is_running = False

    def execute_task(self):
        def aux():
            task_path_old_task = [
                [0, -pi / 2, 0, -pi / 2, 0, 0],
                [0.8280960917472839, -1.9970418415465296, -1.4637036323547363, -1.1603848201087494, 1.6656054258346558,
                 0.779181718826294],
                [-0.22807675996889287, -1.996718545953268, -1.4677340984344482, -1.1677337449840088, 1.665229320526123,
                 0.7791650891304016],
                [0.29649999737739563, -1.9992934666075648, -1.4696433544158936, -1.1699600380710145, 1.6635268926620483,
                 0.7791459560394287],
                [0.3278017044067383, -1.9509321651854457, -1.4467971324920654, -1.3631957930377503, -1.6213730017291468,
                 0.7514999508857727],
                [1.7807719707489014, -1.8186232052245082, 1.6652687231646937, -1.5752068958678187, -1.539321247731344,
                 0.30899572372436523],
                [1.584303379058838, -0.7259183687022706, 2.378000561391012, -4.521374126473898, -1.62250262895693,
                 0.030404329299926758],
                [1.5036368370056152, -0.32768888891253667, 1.4575064818011683, -4.135426422158712, -1.5854395071612757,
                 -0.0924304167376917],
                [1.5734895467758179, -0.18240340173754888, 0.7778208891498011, -3.580815931359762, -1.635761562977926,
                 -1.4789264837848108],
                [1.5734895467758179, -0.18240340173754888, 0.7778208891498011, -3.580815931359762, -1.635761562977926,
                 1.4789264837848108],
                [1.5734895467758179, -0.18240340173754888, 0.7778208891498011, -3.580815931359762, -1.635761562977926,
                 -1.4789264837848108],
                [1.541496992111206, -0.5472095769694825, 1.9779437224017542, -4.515601535836691, -1.651654068623678,
                 -1.461458985005514],
                [1.5411441326141357, -0.7812627118876954, 2.2841838041888636, -4.60047521213674, -1.5557225386248987,
                 -1.458912197743551],
                [1.955119013786316, -0.7812145513347168, 2.285118643437521, -4.562549730340475, -0.9843061606036585,
                 -1.4589360396014612],
                [2.026189088821411, -0.781358079319336, 0.4412902037249964, -3.946350236932272, -0.980323616658346,
                 -1.4591277281390589],
                [0, -pi / 2, 0, -pi / 2, 0, 0],
            ]

            task_path_old_version = [
                self.home,
                [0.45210981369018555, -3.539252897302145, 0.9914467970477503, -0.6139599245837708, 1.1233137845993042,
                 3.199092149734497],
                [-0.08237106004823858, -3.519120832482809, 1.6106651465045374, -1.1102524262717743, 1.054146409034729, 3.9091503620147705],
                [-1.1325977484332483, -1.1808748704246064, -0.9004731774330139, 2.081622524852417, -1.1109607855426233, 0.12972474098205566],
                [-1.1547163168536585, -2.029471536675924, -0.9019871354103088, 2.86674086629834, -1.1632941404925745, 0.14611268043518066],
                [-1.2693751494037073, -2.3390051327147425, -0.4303496181964874, 2.793999357814453, -1.1887553373919886, -0.024665657673970998],
                [-1.2740924994098108, -2.3412076435484828, -0.430588960647583, 2.7770325380512695, -1.2127764860736292, 3.060415506362915],
                [-1.2620652357684534, -1.5316730302623291, -0.4279654026031494, 1.9765478807636718, -1.260444466267721, 3.140753746032715],
                self.home
            ]
            task_path = [
                self.home,
                [
                    0.4154955744743347, -3.0889584026732386, -0.004440600983798504, -0.08255477369342046, 1.1764490604400635, 0.009514331817626953],
                [
                    -0.011867348347799123, -2.579003473321432, -0.001514793373644352, 0.07376722871746821, 1.0491279363632202, 0.5725481510162354],
                [
                    -0.014177624379293263, -1.6043607197203578, 0.033509079610006154, 0.06766728937115474, -0.03832084337343389, -1.703691307698385],
                [
                    -1.1889117399798792, -0.901359037762024, -1.8020645380020142, -0.4623677295497437, 1.1054232120513916, -0.025052849446431935],
                [
                    -1.1465619246112269, -2.027121683160299, -1.9031667709350586, 0.6782716947742919, 1.0984952449798584, 0.06840498745441437],
                [
                    -1.2014954725848597, -2.2325173817076625, -1.1535048484802246, -0.04193039358172612, 1.1713902950286865, 0.12482447922229767],
                [
                    -1.2014835516559046, -2.2325054607787074, -1.1535197496414185, -0.0418885511210938, 1.1714805364608765, -2.3283541838275355],
                [
                    -1.228062931691305, -1.9083448849120082, -1.330953598022461, 0.0995076137730102, 1.2622976303100586, 0.0041425228118896484],
                [-1.3178303877459925, -1.0144665998271485, -1.331526756286621, -0.7953430575183411, 1.262758731842041,
                 0.00413402309641242],
                self.home
            ]
            self.execute_path(task_path)
            self._is_running = False

        self._is_running = True
        t = threading.Thread(target=aux)
        t.start()

    def is_running(self):
        return self._is_running


class AssistanceRobot(BaseRobot):
    ip = '192.168.0.10'

    def __init__(self):
        super().__init__()


'''
[0.45210981369018555, -3.539252897302145, 0.9914467970477503, -0.6139599245837708, 1.1233137845993042, 3.199092149734497]
[-0.08237106004823858, -3.519120832482809, 1.6106651465045374, -1.1102524262717743, 1.054146409034729, 3.9091503620147705]
[-1.1325977484332483, -1.1808748704246064, -0.9004731774330139, 2.081622524852417, -1.1109607855426233, 0.12972474098205566]
[-1.1547163168536585, -2.029471536675924, -0.9019871354103088, 2.86674086629834, -1.1632941404925745, 0.14611268043518066]
[-1.2693751494037073, -2.3390051327147425, -0.4303496181964874, 2.793999357814453, -1.1887553373919886, -0.024665657673970998]
[-1.2740924994098108, -2.3412076435484828, -0.430588960647583, 2.7770325380512695, -1.2127764860736292, 3.060415506362915]
[-1.2620652357684534, -1.5316730302623291, -0.4279654026031494, 1.9765478807636718, -1.260444466267721, 3.140753746032715]






'''
# [[0.45210981369018555, -3.539252897302145, 0.9914467970477503, -0.6139599245837708, 1.1233137845993042, 3.199092149734497],
# [-0.08237106004823858, -3.519120832482809, 1.6106651465045374, -1.1102524262717743, 1.054146409034729, 3.9091503620147705],
# [-1.1325977484332483, -1.1808748704246064, -0.9004731774330139, 2.081622524852417, -1.1109607855426233, 0.12972474098205566],
# [-1.1547163168536585, -2.029471536675924, -0.9019871354103088, 2.86674086629834, -1.1632941404925745, 0.14611268043518066],
# [-1.2693751494037073, -2.3390051327147425, -0.4303496181964874, 2.793999357814453, -1.1887553373919886, -0.024665657673970998],
# [-1.2740924994098108, -2.3412076435484828, -0.430588960647583, 2.7770325380512695, -1.2127764860736292, 3.060415506362915],
# [-1.2620652357684534, -1.5316730302623291, -0.4279654026031494, 1.9765478807636718, -1.260444466267721, 3.140753746032715]]
